@{
    ViewData["Title"] = "Product Management";
}

<h1 class="text-center p-3 mx-0 my-4 text-primary shadow-sm">
    Product & Product Feature Management
    <span class="d-block mx-auto mt-2" style="width:80px;height:3px;background:#0d6efd;border-radius:2px;" />
</h1>

<div class="text-center">
    <button type="button" class="btn rounded-pill btn-outline-primary shadow-sm border-2 w-25" id="btnShowProducts">
        Show Products
    </button>
</div>

<div class="container-fluid mt-4">
    <form id="productForm" enctype="multipart/form-data">
        <input type="hidden" id="ProductId" name="ProductId" value="0" />

        <div class="row">
            <div class="col-md-6">
                <h4>Product Info</h4>
                <div class="form-group mb-2">
                    <label>Product Name</label>
                    <input type="text" class="form-control" id="Name" name="Name"/>
                </div>
                <div class="form-group mb-2">
                    <label>Category</label>
                    <select class="form-select" id="CategoryId" name="CategoryId">
                        <option disabled selected value="">Select a category</option>
                    </select>
                </div>
                <div class="form-group mb-2">
                    <label for="price">Price</label>
                    <div class="input-group">
                        <div class="input-group-text">
                            <span>৳</span>
                        </div>
                    <input class="form-control" type="number" step="any" value="0.00" min="500" id="Price" name="Price"/>
                    </div>
                </div>
                <div class="form-group mb-2">
                    <label for="Stock">Stock</label>
                    <input type="number" class="form-control" id="Stock" name="Stock"/>
                </div>
                <div class="form-group mb-2">
                    <label for="PurchaseDate">Date of purchase</label>
                    <div class="input-group date" id="datepicker">
                        <input type="text" class="form-control" name="PurchaseDate" id="PurchaseDate"/>
                        <div class="input-group-append">
                            <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                        </div>
                    </div>
                </div>
                <div class="form-check mb-2">
                    <input type="checkbox" id="IsAvailable" name="IsAvailable" class="form-check-input" value="true"/>
                    <input type="hidden" name="IsAvailable" value="false"/>
                    <label class="form-check-label">Availability</label>
                </div>
                <div class="form-group mb-2">
                    <label>Brand</label>
                    <input type="text" id="Brand" name="Brand" class="form-control" />
                </div>
                <div class="form-group mb-2">
                    <label for="Description">Description
                        <i class="bi bi-info-circle" data-bs-toggle="tooltip" title="Add detailed notes or product features."></i>
                    </label>
                    <textarea id="Description" name="Description" class="form-control w-100 h-100" style="min-height:150px;"></textarea>
                    <small id="descCounter" class="form-text text-muted">0 / 500 characters</small>
                </div>
                <div class="form-group mb-2">
                    <label>Photo</label>
                    <input class="form-control" type="file" id="PhotoFile" name="PhotoFile"/>
                    <div class="mt-2">
                        <img id="PhotoPreview" src="" alt="No Image" class="img-thumbnail" style="max-height:120px;"/>
                    </div>
                </div>                
                <div class="d-flex justify-content-between mt-2">
                    <button type="submit" class="btn btn-success w-25 mt-2">S A V E</button>
                    <button type="button" class="btn btn-secondary w-25 mt-2 " id="btnReset">R E S E T</button>
                </div>

            </div>
            <div class="col-md-6">
                <h4>Product Features</h4>
                <table class="table table-borderless">
                    <thead>
                        <tr>
                            <th>Feature Name</th>
                            <th>Desctiption</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="featureContainer">

                    </tbody>
                </table>
            </div>
        </div>
    </form>
</div>

<hr class="mt-5"/>
<h3 class="text-center">List of Product and Features</h3>
<hr />

<div id="productListSection">
    <table class="table table-striped" id="productTable">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Stock</th>
                <th>Date of Purchase</th>
                <th>Availability</th>
                <th>Photo</th>
                <th>Features</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>

        </tbody>
    </table>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {

          $('#datepicker').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            todayHighlight: true
          });

            $('#Description').on('input', function () {
              $('#descCounter').text(`${this.value.length} / 500 characters`);
            });

            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
              return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Load categories dynamically
            function loadCategoriesDropdown(){
                $.getJSON('/Category/GetAll', function(data){
                    let options = '<option disabled selected value="">Select a category</option>';
                    data.forEach(c => {
                        options += `<option value="${c.categoryId}">${c.name}</option>`;
                    });
                    $('#CategoryId').html(options); 
                });
            }

            loadCategoriesDropdown();

         });



         //Save Product
         $('#productForm').submit(function(e){
             e.preventDefault();
             let formData = new FormData(this);
             $.ajax({
                 url:'/Product/Save',
                 type:'POST',
                 data: formData,
                 processData: false,
                 contentType: false,
                 success: function(){
                     loadProducts();
                     resetForm();
                 },
                 error: function(xhr){
                     console.log(xhr.response.JSON);
                 }
             })
         });

         //Photo preview
         const noImageUrl = '/images/no-image.jpg';
         $('#PhotoPreview').attr('src',noImageUrl);

         // Change preview photo on file selection
        $('#PhotoFile').change(function (e) {
            const file = e.target.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function (ev) {
                    $('#PhotoPreview').attr('src', ev.target.result);
                };
                reader.readAsDataURL(file);
            } else {
                // revert to default placeholder if file is removed
                $('#PhotoPreview').attr('src', noImageUrl);
            }
        });

        // Feature Add or Remove

        let featureCount =0;

        //To add new feature row
        function addFeatureRow(name = '', description = '', isLast = true){
            let btn = isLast ? 
            `
                <button type="button" class="btn btn-success btnAddFeature">+</button>
            `
            :
            `
                <button type="button" class="btn btn-danger btnRemoveFeature">X</button>
            `;
            let row = 
            `
                <tr>
                    <td>
                        <input type="text" name="Features[${featureCount}].Name" value="${name}" class="form-control" placeholder="Feature name"/>
                    </td>
                    <td>
                        <input type="text" name="Features[${featureCount}].Description" value="${description}" class="form-control" placeholder="Description"/>
                    </td>
                    <td>${btn}</td>
                </tr>
            `;
            $('#featureContainer').append(row);
            featureCount++;
        }

        // Initial empty row for new product
        $('#featureContainer').html('');
        addFeatureRow('', '', true);

        //Add feature row
        $(document).on('click', '.btnAddFeature', function (){
            $(this).removeClass('btn-success btnAddFeature').addClass('btn-danger btnRemoveFeature').text('X');
            addFeatureRow('', '', true);
        });

        //Remove row
        $(document).on('click', '.btnRemoveFeature', function(){
            $(this).closest('tr').remove();
        });


         // Load Products in table
        function loadProducts() {
            $.getJSON('/Product/GetAll', function (data) {
                let rows = '';
                data.forEach(p => {
                    rows += `
                    <tr data-id="${p.productId}">
                        <td>${p.name}</td>
                        <td>${p.categoryId}</td>
                        <td>${p.price}</td>
                        <td>${p.stock}</td>
                        <td>${p.purchaseDate.split('T')[0]}</td>
                        <td class="text-center">
                          ${p.isAvailable ? '<span style="color:green">In Stock</span>' : '<span style="color:red">Out of Stock</span>'}
                        </td>

                          <td>
                                <img src="${p.photo ? p.photo : '/images/no-image.jpg'}" class="img-thumbnail" style="max-height:60px;" />
                           </td>

                        <td><ul>${p.features.map(f => `<li>${f.name} - ${f.description}</li>`).join('')}</ul></td>
                        <td>
                            <button class="btn btn-sm btn-info btnEdit"><i class="bi bi-pencil text-white shadow-sm"></i></button>
                            <button class="btn btn-sm btn-danger btnDelete"><i class="bi bi-trash shadow-sm"></i></button>
                        </td>
                    </tr>`;
                });
                $('#productTable tbody').html(rows);
            });
        }

        loadProducts();

        //Edit Product
        $(document).on('click', '.btnEdit', function() {
            let id = $(this).closest('tr').data('id');
            $.getJSON(`/Product/GetById?id=${id}`, function(p){
                $('#ProductId').val(p.productId);
                $('#Name').val(p.name);
                $('#CategoryId').val(p.categoryId);
                $('#Price').val(p.price);
                $('#Stock').val(p.stock);
                $('#PurchaseDate').val(p.purchaseDate.split('T')[0]);
                $('#IsAvailable').prop('checked', p.isAvailable);
                $('#Brand').val(p.brand);
                $('#Description').val(p.description);
                $('#PhotoPreview').attr('src', p.photo? '/' + p.photo: '' );

                //reset features
                $('#featureContainer').html('');
                featureCount = 0;

                //add existing features
                p.features.forEach((f, index) =>{
                    let isLast = index === p.features.length - 1;
                    //here last features get add button
                    addFeatureRow(f.name, f.description, isLast );
                });
                //if no features exist, add an expty row with Add Button
                if(p.features.length === 0) addFeatureRow('', '', true);

            });
        });

        //Delete Product
        $(document).on('click', '.btnDelete', function(){
            let id = $(this).closest('tr').data('id');
            if(confirm('Are you sure?')){
                $.post('/Product/Delete', {id: id}, function(){
                    loadProducts();
                });
            }
        });

        // Reset Form
        function resetForm() {
            $('#productForm')[0].reset();
            $('#ProductId').val(0);

            // Set Photo preview back to default placeholder
            $('#PhotoPreview').attr('src', '/images/no-image.jpg');

            // Reset feature container
            $('#featureContainer').html('');
            featureCount = 0;
            addFeatureRow('', '', true);
        }

        $('#btnReset').click(resetForm);

        $('#btnShowProducts').click(function(){
            $('html, body').animate({
                scrollTop: $('#productListSection').offset().top
            }, 400)
        });

    </script>

}